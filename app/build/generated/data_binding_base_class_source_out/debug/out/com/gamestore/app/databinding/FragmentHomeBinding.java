// Generated by view binder compiler. Do not edit!
package com.gamestore.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gamestore.app.R;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageButton buttonCart;

  @NonNull
  public final Chip chipAction;

  @NonNull
  public final Chip chipIndie;

  @NonNull
  public final Chip chipNewReleases;

  @NonNull
  public final Chip chipRpg;

  @NonNull
  public final Chip chipSale;

  @NonNull
  public final Chip chipStrategy;

  @NonNull
  public final LinearLayout layoutBalance;

  @NonNull
  public final RecyclerView recyclerViewGames;

  @NonNull
  public final TextView textBalance;

  @NonNull
  public final TextView textCartBadge;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView, @NonNull ImageButton buttonCart,
      @NonNull Chip chipAction, @NonNull Chip chipIndie, @NonNull Chip chipNewReleases,
      @NonNull Chip chipRpg, @NonNull Chip chipSale, @NonNull Chip chipStrategy,
      @NonNull LinearLayout layoutBalance, @NonNull RecyclerView recyclerViewGames,
      @NonNull TextView textBalance, @NonNull TextView textCartBadge) {
    this.rootView = rootView;
    this.buttonCart = buttonCart;
    this.chipAction = chipAction;
    this.chipIndie = chipIndie;
    this.chipNewReleases = chipNewReleases;
    this.chipRpg = chipRpg;
    this.chipSale = chipSale;
    this.chipStrategy = chipStrategy;
    this.layoutBalance = layoutBalance;
    this.recyclerViewGames = recyclerViewGames;
    this.textBalance = textBalance;
    this.textCartBadge = textCartBadge;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cart;
      ImageButton buttonCart = ViewBindings.findChildViewById(rootView, id);
      if (buttonCart == null) {
        break missingId;
      }

      id = R.id.chip_action;
      Chip chipAction = ViewBindings.findChildViewById(rootView, id);
      if (chipAction == null) {
        break missingId;
      }

      id = R.id.chip_indie;
      Chip chipIndie = ViewBindings.findChildViewById(rootView, id);
      if (chipIndie == null) {
        break missingId;
      }

      id = R.id.chip_new_releases;
      Chip chipNewReleases = ViewBindings.findChildViewById(rootView, id);
      if (chipNewReleases == null) {
        break missingId;
      }

      id = R.id.chip_rpg;
      Chip chipRpg = ViewBindings.findChildViewById(rootView, id);
      if (chipRpg == null) {
        break missingId;
      }

      id = R.id.chip_sale;
      Chip chipSale = ViewBindings.findChildViewById(rootView, id);
      if (chipSale == null) {
        break missingId;
      }

      id = R.id.chip_strategy;
      Chip chipStrategy = ViewBindings.findChildViewById(rootView, id);
      if (chipStrategy == null) {
        break missingId;
      }

      id = R.id.layout_balance;
      LinearLayout layoutBalance = ViewBindings.findChildViewById(rootView, id);
      if (layoutBalance == null) {
        break missingId;
      }

      id = R.id.recycler_view_games;
      RecyclerView recyclerViewGames = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewGames == null) {
        break missingId;
      }

      id = R.id.text_balance;
      TextView textBalance = ViewBindings.findChildViewById(rootView, id);
      if (textBalance == null) {
        break missingId;
      }

      id = R.id.text_cart_badge;
      TextView textCartBadge = ViewBindings.findChildViewById(rootView, id);
      if (textCartBadge == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, buttonCart, chipAction, chipIndie,
          chipNewReleases, chipRpg, chipSale, chipStrategy, layoutBalance, recyclerViewGames,
          textBalance, textCartBadge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
