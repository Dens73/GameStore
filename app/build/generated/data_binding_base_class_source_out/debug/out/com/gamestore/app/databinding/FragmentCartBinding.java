// Generated by view binder compiler. Do not edit!
package com.gamestore.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gamestore.app.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCartBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton buttonBack;

  @NonNull
  public final MaterialButton buttonCheckout;

  @NonNull
  public final LinearLayout layoutCartContent;

  @NonNull
  public final LinearLayout layoutEmptyCart;

  @NonNull
  public final RecyclerView recyclerViewCart;

  @NonNull
  public final TextView textTotal;

  @NonNull
  public final TextView textUserBalance;

  private FragmentCartBinding(@NonNull LinearLayout rootView, @NonNull ImageButton buttonBack,
      @NonNull MaterialButton buttonCheckout, @NonNull LinearLayout layoutCartContent,
      @NonNull LinearLayout layoutEmptyCart, @NonNull RecyclerView recyclerViewCart,
      @NonNull TextView textTotal, @NonNull TextView textUserBalance) {
    this.rootView = rootView;
    this.buttonBack = buttonBack;
    this.buttonCheckout = buttonCheckout;
    this.layoutCartContent = layoutCartContent;
    this.layoutEmptyCart = layoutEmptyCart;
    this.recyclerViewCart = recyclerViewCart;
    this.textTotal = textTotal;
    this.textUserBalance = textUserBalance;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_back;
      ImageButton buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.button_checkout;
      MaterialButton buttonCheckout = ViewBindings.findChildViewById(rootView, id);
      if (buttonCheckout == null) {
        break missingId;
      }

      id = R.id.layout_cart_content;
      LinearLayout layoutCartContent = ViewBindings.findChildViewById(rootView, id);
      if (layoutCartContent == null) {
        break missingId;
      }

      id = R.id.layout_empty_cart;
      LinearLayout layoutEmptyCart = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmptyCart == null) {
        break missingId;
      }

      id = R.id.recycler_view_cart;
      RecyclerView recyclerViewCart = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCart == null) {
        break missingId;
      }

      id = R.id.text_total;
      TextView textTotal = ViewBindings.findChildViewById(rootView, id);
      if (textTotal == null) {
        break missingId;
      }

      id = R.id.text_user_balance;
      TextView textUserBalance = ViewBindings.findChildViewById(rootView, id);
      if (textUserBalance == null) {
        break missingId;
      }

      return new FragmentCartBinding((LinearLayout) rootView, buttonBack, buttonCheckout,
          layoutCartContent, layoutEmptyCart, recyclerViewCart, textTotal, textUserBalance);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
